/**************************************************************************
*                                                                         *
*             Java Grande Forum Benchmark Suite - Version 2.0             *
*                                                                         *
*                            produced by                                  *
*                                                                         *
*                  Java Grande Benchmarking Project                       *
*                                                                         *
*                                at                                       *
*                                                                         *
*                Edinburgh Parallel Computing Centre                      *
*                                                                         *
*                email: epcc-javagrande@epcc.ed.ac.uk                     *
*                                                                         *
*      adapted from SciMark 2.0, author Roldan Pozo (pozo@cam.nist.gov)   *
*                                                                         *
*      This version copyright (c) The University of Edinburgh, 1999.      *
*                         All rights reserved.                            *
*                                                                         *
**************************************************************************/

package sorsparbc; 
import jgfutil.*; 

public class SOR
{
    public static double Gtotal = 0.0;

    public static final void SORrun(double omega, double G[*,*], int num_iterations)
    {
	final int M = G.getSize(0);
	final int N = G.getSize(1);

	final double omega_over_four = omega * 0.25;
	final double one_minus_omega = 1.0 - omega;
       
	JGFInstrumentor.startTimer("Section2:SOR:Kernel"); 

	for ( p :- 0:num_iterations ) {
	    int M1 = Math.min( M-1,G.getSize(0)-1);
	    int N1 = Math.min( N-1,G.getSize(1)-1);
	    for( i :- 1:M1 ){
		for( j :- 1:N1 )
		    (<$boundscheck=false$> G[i,j]) = omega_over_four * (<$boundscheck=false$> G[i-1,j] + (<$boundscheck=false$> G[i+1,j]) + (<$boundscheck=false$> G[i,j-1] )
			    + (<$boundscheck=false$> G[i,j+1])) + one_minus_omega * (<$boundscheck=false$> G[i,j]);
		if( N1<N-1 ){
		    throw new ArrayIndexOutOfBoundsException();
		}
	    }
	    if( M1<M-1 ){
		throw new ArrayIndexOutOfBoundsException();
	    }
	}


	JGFInstrumentor.stopTimer("Section2:SOR:Kernel");

	for( i :- 1:M-1, j :- 1:N-1 ){
	    Gtotal += G[i,j];
	}               

    }
}
			
