/**************************************************************************
*                                                                         *
*             Java Grande Forum Benchmark Suite - Version 2.0             *
*                                                                         *
*                            produced by                                  *
*                                                                         *
*                  Java Grande Benchmarking Project                       *
*                                                                         *
*                                at                                       *
*                                                                         *
*                Edinburgh Parallel Computing Centre                      *
*                                                                         * 
*                email: epcc-javagrande@epcc.ed.ac.uk                     *
*                                                                         *
*                                                                         *
*      This version copyright (c) The University of Edinburgh, 1999.      *
*                         All rights reserved.                            *
*                                                                         *
**************************************************************************/


Compiling the benchmark suite
-----------------------------

 1. Add the top directory (v2.0, the directory where this README 
   file is located) to your CLASSPATH. 

 2. Change directory to jgfutil.  

 3. Compile all the  .java files in this directory (e.g. javac *.java) 

 4. Change directory to section1.  

 5. Compile all the  .java files in this directory (e.g. javac *.java) 
    The compiler should be able to follow all dependencies. 

 6. Repeat steps 4 and 5 for section2 and section3.
 
Running the benchmark suite
---------------------------

Each benchmark in each section has a separate main program for each
size of dataset. For example, section2/JGFLUFactBenchSizeA.java
contains the main program for the LU factorisation benchmark in
Section 2 with dataset size A.

Also supplied is a main program which runs all the benchmarks in a
given section for a given dataset size (e.g. section2/JGFAllSizeA.java). 
Note that for large dataset sizes using these main programs can result 
in memory problems, and it may be preferable to run each benchmark 
separately. 

Note that, because some of the benchmarks require significant amounts
of memory, the default amount of memory available to JVMs may not be
large enough, resulting in a java.lang.OutOfMemoryError message. 
If this occurs, it will be necessary to increase the amount of
memory available to the JVM. 

Known problems
--------------

The Serial benchmark in Section 1 compiles correctly but fails the byte-code verifier
under the Sun JDK 1.2.1 releases. This can be avoided by running with the -noverify flag. 


Formatting results
------------------

To produce an HTML table of results: 

1. Collect all the output from the benchmarks into a single file. If you have run a benchmark
   more than once, make sure that only one result (e.g. the fastest) is included. 

2. Change directory to tools, compile and run JGFNumber.java - this will prompt you for
   the details of the system and the name of the results file, and will produce a file
   called JGFresults.html

3. We would welcome any new results - please email the HTML file to epcc-javagrande@epcc.ed.ac.uk

