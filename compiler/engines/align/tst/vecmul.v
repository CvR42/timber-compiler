// Generated by the Spar front-end

program

pragma [boundscheck=false,ProcessorType=((dsp "TI_C60")),Processors=((dsp (at P 4)))]

declarations [
    globalvariable spar_testsuite_vecmul_A_0 pragma [on=(lambda (i) (at P (cyclic i)))] pointer shape [dontcare] double
    ,
    globalvariable spar_testsuite_vecmul_B_0 pragma [on=(lambda (i) (at P (block i)))] pointer shape [dontcare] double
    ,
    globalvariable spar_testsuite_vecmul_C_0 pragma [on=(lambda (i) (at P 0))] pointer shape [dontcare] double
    ,
    procedure spar_testsuite_vecmul_main_0 []
    statements [
        if spar_testsuite_vecmul_needstatic_init_vecmul0_0
            statements [
                procedurecall spar_testsuite_vecmul_static_init_vecmul0_0 []
            ]
            statements [
            ]
        ,
        for [loop_0=0:10]
            statements [
                print [1, "loop:"]
                ,
                println [1, loop_0]
                ,
                pragma [independent]
                foreach [i_0=0:3000]
                    statements [
                        assign (*spar_testsuite_vecmul_A_0, [i_0]) ( cast double i_0, *, 1.1d )
                    ]
                ,
                pragma [independent]
                foreach [i_1=0:3000]
                    statements [
                        assign (*spar_testsuite_vecmul_B_0, [i_1]) ( cast double i_1, *, 2.3d )
                    ]
                ,
                pragma [independent]
                foreach [i_2=0:3000]
                    statements [
                        assign (*spar_testsuite_vecmul_A_0, [i_2]) ( (*spar_testsuite_vecmul_A_0, [i_2]), *, (*spar_testsuite_vecmul_B_0, [i_2]) )
                    ]
                ,
                pragma [independent]
                foreach [i_3=0:3000]
                    statements [
                        assign (*spar_testsuite_vecmul_C_0, [i_3]) (*spar_testsuite_vecmul_A_0, [i_3])
                    ]
            ]
        ,
        print [1, "Endresult: "]
    ]

    ,
    globalvariable spar_testsuite_vecmul_needstatic_init_vecmul0_0 boolean true
    ,
    procedure spar_testsuite_vecmul_static_init_vecmul0_0 []
    statements [
        if java_lang_Object_needstatic_init_Object0_0
            statements [
                assign java_lang_Object_needstatic_init_Object0_0 false
            ]
            statements [
            ]
        ,
        assign spar_testsuite_vecmul_needstatic_init_vecmul0_0 false
        ,
        if spar_testsuite_vecmul_needstatic_init_vecmul0_0
            statements [
                procedurecall spar_testsuite_vecmul_static_init_vecmul0_0 []
            ]
            statements [
            ]
        ,
        assign spar_testsuite_vecmul_A_0 fillednew pragma [on=(lambda (i) (at P (cyclic i)))] shape [3000] double 0.0d
        ,
        assign spar_testsuite_vecmul_B_0 fillednew pragma [on=(lambda (i) (at P (block i)))] shape [3000] double 0.0d
        ,
        assign spar_testsuite_vecmul_C_0 fillednew pragma [on=(lambda (i) (at P 0))] shape [3000] double 0.0d
    ]

    ,
    globalvariable java_lang_Object_needstatic_init_Object0_0 boolean true
    ,
    cardinalityvariable loop_0
    ,
    cardinalityvariable i_0
    ,
    cardinalityvariable i_1
    ,
    cardinalityvariable i_2
    ,
    cardinalityvariable i_3
    ,
    record __introspection_type [nm:string, classno:int, last_subclassno:int,vtable:pointer record [],ivtable:pointer record [],flags:int]
    ,
    globalvariable vecmul_introspection0 record __introspection_type record ["spar.testsuite.vecmul", 2, 2, cast pointer record [] &vecmul_vtable0, cast pointer record [] &ivtable0, 1]
    ,
    globalvariable Object_introspection0 record __introspection_type record ["java.lang.Object", 1, 2, cast pointer record [] &Object_vtable0, cast pointer record [] &ivtable1, 1]
    ,
    globalvariable __spar_rte_typelist shape [2] pointer record __introspection_type shape [2] pointer record __introspection_type [
        &vecmul_introspection0,
        &Object_introspection0
    ]
    ,
    // The representation of all interface types
    record __any_interface_type [
        __vtable: pointer record [ __introspection: pointer record __introspection_type ],
        __ivtable: pointer record __ivtable_type
    ]
    ,
    record __ivtable_type [
    ]
    ,
    record vecmul0 [
        __vtable: pointer record [ __introspection: pointer record __introspection_type ],
        __ivtable: pointer record __ivtable_type
    ],
    // The record type for the vtable of class type spar.testsuite.vecmul
    record __t_vecmul_vtable0 [
        __introspection: pointer record __introspection_type
    ],
    globalvariable vecmul_vtable0 record __t_vecmul_vtable0 record [
        &vecmul_introspection0
    ]
    ,
    globalvariable ivtable0 record __ivtable_type record [
    ],
    formalvariable this0 scope0 pointer record vecmul0,
    function __init_vecmul0 [this0] pointer record vecmul0 statements scope0 [ assign field *this0 __vtable cast pointer record [ __introspection: pointer record __introspection_type ] &vecmul_vtable0, assign field *this0 __ivtable &ivtable0, return this0 ]
    ,
    record Object0 [
        __vtable: pointer record [ __introspection: pointer record __introspection_type ],
        __ivtable: pointer record __ivtable_type
    ],
    // The record type for the vtable of class type java.lang.Object
    record __t_Object_vtable0 [
        __introspection: pointer record __introspection_type
    ],
    globalvariable Object_vtable0 record __t_Object_vtable0 record [
        &Object_introspection0
    ]
    ,
    globalvariable ivtable1 record __ivtable_type record [
    ],
    formalvariable this1 scope1 pointer record Object0,
    function __init_Object0 [this1] pointer record Object0 statements scope1 [ assign field *this1 __vtable cast pointer record [ __introspection: pointer record __introspection_type ] &Object_vtable0, assign field *this1 __ivtable &ivtable1, return this1 ]
]

statements [
    procedurecall spar_testsuite_vecmul_main_0 []
]
