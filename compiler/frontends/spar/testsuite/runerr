#!/bin/sh
#
# Run a test that is supposed to fail.

TIMBERSRCROOT=../../..
SPARFLAGS=-g

# Places of executables
SPAR=$TIMBERSRCROOT/driver/spar
VERBOSE=0
FILE=
SPARPATH=$TIMBERSRCROOT/frontends:$SPARPATH
export SPARPATH

for f; do
    case "$f" in
	-v)
	    VERBOSE=1;;

	-*)
	    echo "unknown option '$f'"; exit 2 ;;

	*)
	    FILE=$f ;;
    esac
done

if [ x$FILE = x ]; then
    echo "No file specified"
    exit 2
fi
BASENAME=`basename $FILE .spar`
BASENAME=`basename $BASENAME .java`
OUTFILE=$BASENAME.v
ERRFILE=$BASENAME.err
TESTERRFILE=$BASENAME.testerr
STATUSFILE=$BASENAME.status
FLAGSFILE=$BASENAME.flags
if [ ! -e $ERRFILE ]; then
    echo "Creating default (=empty) error reference file '$ERRFILE'"
    touch $ERRFILE
fi
if [ ! -e $STATUSFILE ]; then
    echo "Creating default status file '$STATUSFILE'"
    echo "1" > $STATUSFILE
fi
OKSTATUS=`cat $STATUSFILE`
if [ -e $FLAGSFILE ]; then
    SPARFLAGS="$SPARFLAGS `cat $FLAGSFILE`"
fi
if [ $VERBOSE = 1 ]; then
    echo spar $SPARFLAGS $FILE
fi
FAIL=0
$SPAR $SPARFLAGS $FILE -o $OUTFILE 2> $TESTERRFILE
STATUS=$?
if [ $STATUS != $OKSTATUS ]; then
    echo "Compilation returned status code $STATUS instead of $OKSTATUS"
    echo "If you think the status code should be $STATUS, update with:"
    echo "    echo $STATUS >! $STATUSFILE"
    FAIL=1
fi
CMD="diff $TESTERRFILE $ERRFILE"
if [ $VERBOSE = 1 ]; then
    echo $CMD
fi
$CMD
STATUS=$?
if [ $STATUS != 0 ]; then
    echo "Error output differs from reference."
    if [ $FAIL = 0 ]; then
	echo "If you think the reference is wrong, update with:"
	echo "    cp $TESTERRFILE $ERRFILE"
    fi
    FAIL=1
fi
if [ $FAIL = 1 ]; then
    exit 1
fi
rm -f $OUTFILE $TESTERRFILE
exit 0
